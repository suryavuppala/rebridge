{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avire/OneDrive/Documents/Web_development/rebridge/src/app/stats/page.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function ImpactDashboard() {\r\n  // Sample data - in a real app this would come from your backend\r\n  const [stats, setStats] = useState({\r\n    totalWaste: 8754,\r\n    plastic: 3245,\r\n    paper: 2879,\r\n    wood: 1230,\r\n    eWaste: 950,\r\n    carbonReduction: 4500,\r\n    pickups: 1243\r\n  });\r\n  \r\n  const [treesSaved, setTreesSaved] = useState(0);\r\n  const [waterPreserved, setWaterPreserved] = useState(0);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  \r\n  const monthlyData = [\r\n    { name: 'Jan', waste: 720, plastic: 250, paper: 230, wood: 100, eWaste: 70, carbon: 320 },\r\n    { name: 'Feb', waste: 680, plastic: 240, paper: 210, wood: 90, eWaste: 80, carbon: 310 },\r\n    { name: 'Mar', waste: 750, plastic: 260, paper: 240, wood: 120, eWaste: 90, carbon: 340 },\r\n    { name: 'Apr', waste: 800, plastic: 290, paper: 250, wood: 110, eWaste: 80, carbon: 360 },\r\n    { name: 'May', waste: 760, plastic: 275, paper: 245, wood: 100, eWaste: 85, carbon: 350 },\r\n    { name: 'Jun', waste: 810, plastic: 300, paper: 260, wood: 105, eWaste: 95, carbon: 380 },\r\n    { name: 'Jul', waste: 850, plastic: 310, paper: 270, wood: 115, eWaste: 100, carbon: 400 },\r\n    { name: 'Aug', waste: 890, plastic: 325, paper: 290, wood: 130, eWaste: 90, carbon: 420 },\r\n    { name: 'Sep', waste: 920, plastic: 340, paper: 300, wood: 140, eWaste: 95, carbon: 450 },\r\n    { name: 'Oct', waste: 950, plastic: 360, paper: 320, wood: 125, eWaste: 100, carbon: 470 },\r\n  ];\r\n\r\n  // Simulate live updating stats\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setStats(prevStats => ({\r\n        totalWaste: prevStats.totalWaste + Math.floor(Math.random() * 5),\r\n        plastic: prevStats.plastic + Math.floor(Math.random() * 2),\r\n        paper: prevStats.paper + Math.floor(Math.random() * 2),\r\n        wood: prevStats.wood + Math.floor(Math.random() * 1),\r\n        eWaste: prevStats.eWaste + Math.floor(Math.random() * 1),\r\n        carbonReduction: prevStats.carbonReduction + Math.floor(Math.random() * 3),\r\n        pickups: prevStats.pickups + (Math.random() > 0.7 ? 1 : 0)\r\n      }));\r\n    }, 5000); // Update every 5 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Calculate derived environmental impacts\r\n  useEffect(() => {\r\n    // Approximations: 17 trees saved per ton of paper, 25,000 liters of water saved per ton of paper\r\n    setTreesSaved(Math.floor(stats.paper / 1000 * 17));\r\n    setWaterPreserved(Math.floor(stats.paper / 1000 * 25000));\r\n  }, [stats.paper]);\r\n\r\n  // Animation for initial load\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoaded(true);\r\n    }, 500);\r\n  }, []);\r\n\r\n  // Format large numbers\r\n  const formatNumber = (num) => {\r\n    if (num >= 1000000) {\r\n      return (num / 1000000).toFixed(1) + 'M';\r\n    } else if (num >= 1000) {\r\n      return (num / 1000).toFixed(1) + 'K';\r\n    }\r\n    return num;\r\n  };\r\n\r\n  // Custom simple chart components\r\n  const SimpleLineChart = ({ data, dataKey, color, maxValue }) => {\r\n    const height = 50;\r\n    const width = 100;\r\n    \r\n    // Find the max value for scaling\r\n    const max = maxValue || Math.max(...data.map(d => d[dataKey]));\r\n    \r\n    // Generate points for the path\r\n    const points = data.map((item, index) => {\r\n      const x = (index / (data.length - 1)) * width;\r\n      const y = height - (item[dataKey] / max) * height;\r\n      return `${x},${y}`;\r\n    }).join(' ');\r\n    \r\n    return (\r\n      <div className=\"relative h-12 w-24 mt-1\">\r\n        <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"none\">\r\n          <polyline\r\n            points={points}\r\n            fill=\"none\"\r\n            stroke={color}\r\n            strokeWidth=\"2\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SimpleProgressBar = ({ value, max, color }) => {\r\n    const percentage = (value / max) * 100;\r\n    \r\n    return (\r\n      <div className=\"h-4 w-full bg-gray-200 rounded-full overflow-hidden\">\r\n        <div \r\n          className=\"h-full rounded-full transition-all duration-700 ease-in-out\"\r\n          style={{ width: `${percentage}%`, backgroundColor: color }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4 font-sans\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8 text-center transform transition-all duration-500 translate-y-0 opacity-100\">\r\n          <h1 className=\"text-3xl font-bold text-green-600 mb-2\">Recycling Impact Dashboard</h1>\r\n          <p className=\"text-gray-600\">Track the positive environmental impact of our recycling efforts</p>\r\n        </div>\r\n        \r\n        {/* Stats Cards Row */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n          {/* Total Waste Card */}\r\n          <div className={`bg-white p-4 rounded-lg shadow-md transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '100ms' }}>\r\n            <div className=\"flex items-center mb-2\">\r\n              <div className=\"w-10 h-10 rounded-full bg-green-100 flex items-center justify-center mr-3\">\r\n                <span className=\"text-green-600 text-lg\">‚ôªÔ∏è</span>\r\n              </div>\r\n              <h3 className=\"text-gray-700\">Total Waste Managed</h3>\r\n            </div>\r\n            <div className=\"flex justify-between items-end\">\r\n              <div className=\"text-2xl font-bold text-gray-800\">{formatNumber(stats.totalWaste)} kg</div>\r\n              <div className=\"text-sm text-green-600\">\r\n                <SimpleLineChart \r\n                  data={monthlyData.slice(-6)} \r\n                  dataKey=\"waste\" \r\n                  color=\"#10B981\" \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Plastic Recycled Card */}\r\n          <div className={`bg-white p-4 rounded-lg shadow-md transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '200ms' }}>\r\n            <div className=\"flex items-center mb-2\">\r\n              <div className=\"w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center mr-3\">\r\n                <span className=\"text-blue-600 text-lg\">üß¥</span>\r\n              </div>\r\n              <h3 className=\"text-gray-700\">Plastic Recycled</h3>\r\n            </div>\r\n            <div className=\"flex justify-between items-end\">\r\n              <div className=\"text-2xl font-bold text-gray-800\">{formatNumber(stats.plastic)} kg</div>\r\n              <div className=\"text-sm text-green-600\">\r\n                <SimpleLineChart \r\n                  data={monthlyData.slice(-6)} \r\n                  dataKey=\"plastic\" \r\n                  color=\"#3B82F6\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <SimpleProgressBar \r\n                value={stats.plastic} \r\n                max={stats.totalWaste} \r\n                color=\"#3B82F6\" \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Paper Saved Card */}\r\n          <div className={`bg-white p-4 rounded-lg shadow-md transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '300ms' }}>\r\n            <div className=\"flex items-center mb-2\">\r\n              <div className=\"w-10 h-10 rounded-full bg-yellow-100 flex items-center justify-center mr-3\">\r\n                <span className=\"text-yellow-600 text-lg\">üìÑ</span>\r\n              </div>\r\n              <h3 className=\"text-gray-700\">Paper Saved</h3>\r\n            </div>\r\n            <div className=\"flex justify-between items-end\">\r\n              <div className=\"text-2xl font-bold text-gray-800\">{formatNumber(stats.paper)} kg</div>\r\n              <div className=\"text-sm text-green-600\">\r\n                <SimpleLineChart \r\n                  data={monthlyData.slice(-6)} \r\n                  dataKey=\"paper\" \r\n                  color=\"#F59E0B\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <SimpleProgressBar \r\n                value={stats.paper} \r\n                max={stats.totalWaste} \r\n                color=\"#F59E0B\" \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Wood/Furniture Card */}\r\n          <div className={`bg-white p-4 rounded-lg shadow-md transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '400ms' }}>\r\n            <div className=\"flex items-center mb-2\">\r\n              <div className=\"w-10 h-10 rounded-full bg-amber-100 flex items-center justify-center mr-3\">\r\n                <span className=\"text-amber-600 text-lg\">ü™µ</span>\r\n              </div>\r\n              <h3 className=\"text-gray-700\">Wood Repurposed</h3>\r\n            </div>\r\n            <div className=\"flex justify-between items-end\">\r\n              <div className=\"text-2xl font-bold text-gray-800\">{formatNumber(stats.wood)} kg</div>\r\n              <div className=\"text-sm text-green-600\">\r\n                <SimpleLineChart \r\n                  data={monthlyData.slice(-6)} \r\n                  dataKey=\"wood\" \r\n                  color=\"#D97706\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <SimpleProgressBar \r\n                value={stats.wood} \r\n                max={stats.totalWaste} \r\n                color=\"#D97706\" \r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Second Row Stats */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n          {/* E-Waste Card */}\r\n          <div className={`bg-white p-4 rounded-lg shadow-md transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '500ms' }}>\r\n            <div className=\"flex items-center mb-2\">\r\n              <div className=\"w-10 h-10 rounded-full bg-purple-100 flex items-center justify-center mr-3\">\r\n                <span className=\"text-purple-600 text-lg\">üí°</span>\r\n              </div>\r\n              <h3 className=\"text-gray-700\">E-Waste Diverted</h3>\r\n            </div>\r\n            <div className=\"flex justify-between items-end\">\r\n              <div className=\"text-2xl font-bold text-gray-800\">{formatNumber(stats.eWaste)} kg</div>\r\n              <div className=\"text-sm text-green-600\">\r\n                <SimpleLineChart \r\n                  data={monthlyData.slice(-6)} \r\n                  dataKey=\"eWaste\" \r\n                  color=\"#8B5CF6\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <SimpleProgressBar \r\n                value={stats.eWaste} \r\n                max={stats.totalWaste} \r\n                color=\"#8B5CF6\" \r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Carbon Footprint Card */}\r\n          <div className={`bg-white p-4 rounded-lg shadow-md transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '600ms' }}>\r\n            <div className=\"flex items-center mb-2\">\r\n              <div className=\"w-10 h-10 rounded-full bg-green-100 flex items-center justify-center mr-3\">\r\n                <span className=\"text-green-600 text-lg\">üå±</span>\r\n              </div>\r\n              <h3 className=\"text-gray-700\">Carbon Footprint Reduced</h3>\r\n            </div>\r\n            <div className=\"flex justify-between items-end\">\r\n              <div className=\"text-2xl font-bold text-gray-800\">{formatNumber(stats.carbonReduction)} kg CO‚ÇÇ</div>\r\n              <div className=\"text-sm text-green-600\">\r\n                <SimpleLineChart \r\n                  data={monthlyData.slice(-6)} \r\n                  dataKey=\"carbon\" \r\n                  color=\"#10B981\" \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Pickups Card */}\r\n          <div className={`bg-white p-4 rounded-lg shadow-md transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '700ms' }}>\r\n            <div className=\"flex items-center mb-2\">\r\n              <div className=\"w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center mr-3\">\r\n                <span className=\"text-blue-600 text-lg\">üöö</span>\r\n              </div>\r\n              <h3 className=\"text-gray-700\">Number of Pickups</h3>\r\n            </div>\r\n            <div className=\"flex justify-between items-end\">\r\n              <div className=\"text-2xl font-bold text-gray-800\">{formatNumber(stats.pickups)}</div>\r\n              <div className=\"text-sm text-green-600\">+5.3% this month</div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"relative pt-1\">\r\n                <div className=\"mt-2 flex justify-between\">\r\n                  <span className=\"text-xs font-semibold inline-block text-blue-600\">\r\n                    Monthly Goal: 80%\r\n                  </span>\r\n                  <span className=\"text-xs font-semibold inline-block text-blue-600\">\r\n                    {Math.round((stats.pickups % 200) / 2)}%\r\n                  </span>\r\n                </div>\r\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\r\n                  <div style={{ width: `${(stats.pickups % 200) / 2}%` }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500 transition-all duration-500\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Visual Charts Section */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n          {/* Monthly Trends Chart - FIXED HEIGHT CALCULATION */}\r\n          \r\n          \r\n          {/* Material Breakdown Chart */}\r\n          <div className={`bg-white p-4 rounded-lg shadow-md transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '900ms' }}>\r\n            <h3 className=\"text-xl font-semibold text-green-700 mb-4\">Materials Recycled (Current Month)</h3>\r\n            <div className=\"h-64 flex items-center justify-center\">\r\n              {/* Simple Donut Chart */}\r\n              <div className=\"relative w-48 h-48\">\r\n                <svg viewBox=\"0 0 100 100\" className=\"w-full h-full\">\r\n                  {/* Calculate segments for pie chart */}\r\n                  {(() => {\r\n                    const latestData = monthlyData[monthlyData.length - 1];\r\n                    const total = latestData.plastic + latestData.paper + latestData.wood + latestData.eWaste;\r\n                    \r\n                    let startAngle = 0;\r\n                    const segments = [\r\n                      { value: latestData.plastic, color: '#3B82F6', label: 'Plastic' },\r\n                      { value: latestData.paper, color: '#F59E0B', label: 'Paper' },\r\n                      { value: latestData.wood, color: '#D97706', label: 'Wood' },\r\n                      { value: latestData.eWaste, color: '#8B5CF6', label: 'E-Waste' }\r\n                    ].map(segment => {\r\n                      const angle = (segment.value / total) * 360;\r\n                      const x1 = 50 + 35 * Math.cos(Math.PI * startAngle / 180);\r\n                      const y1 = 50 + 35 * Math.sin(Math.PI * startAngle / 180);\r\n                      \r\n                      startAngle += angle;\r\n                      \r\n                      const x2 = 50 + 35 * Math.cos(Math.PI * startAngle / 180);\r\n                      const y2 = 50 + 35 * Math.sin(Math.PI * startAngle / 180);\r\n                      \r\n                      const largeArcFlag = angle > 180 ? 1 : 0;\r\n                      \r\n                      return (\r\n                        <path \r\n                          key={segment.label}\r\n                          d={`M 50 50 L ${x1} ${y1} A 35 35 0 ${largeArcFlag} 1 ${x2} ${y2} Z`}\r\n                          fill={segment.color}\r\n                          className=\"transition-all duration-1000 ease-in-out\"\r\n                        />\r\n                      );\r\n                    });\r\n                    \r\n                    return <>\r\n                      {segments}\r\n                      <circle cx=\"50\" cy=\"50\" r=\"25\" fill=\"white\" />\r\n                    </>;\r\n                  })()}\r\n                </svg>\r\n              </div>\r\n              \r\n              {/* Legend - FIXED TEXT COLOR */}\r\n              <div className=\"ml-6 space-y-2\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-3 h-3 bg-blue-500 mr-2\"></div>\r\n                  <span className=\"text-gray-800\">Plastic</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-3 h-3 bg-yellow-500 mr-2\"></div>\r\n                  <span className=\"text-gray-800\">Paper</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-3 h-3 bg-amber-700 mr-2\"></div>\r\n                  <span className=\"text-gray-800\">Wood</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-3 h-3 bg-purple-500 mr-2\"></div>\r\n                  <span className=\"text-gray-800\">E-Waste</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Environmental Impact Infographics */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          {/* Trees Saved */}\r\n          <div className={`bg-white p-6 rounded-lg shadow-md text-center transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '1000ms' }}>\r\n            <div className=\"text-5xl mb-3 text-green-600\">üå≥</div>\r\n            <div className=\"text-3xl font-bold text-gray-800 mb-2\">{formatNumber(treesSaved)}</div>\r\n            <div className=\"text-gray-600\">Trees Saved</div>\r\n            <div className=\"mt-4 flex justify-center\">\r\n              {/* Tree icons representation */}\r\n              <div className=\"flex flex-wrap justify-center max-w-xs\">\r\n                {Array.from({ length: Math.min(15, Math.ceil(treesSaved / 10)) }).map((_, i) => (\r\n                  <div key={i} className=\"m-1 text-xl\">üå≥</div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Water Preserved */}\r\n          <div className={`bg-white p-6 rounded-lg shadow-md text-center transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '1100ms' }}>\r\n            <div className=\"text-5xl mb-3 text-blue-600\">üíß</div>\r\n            <div className=\"text-3xl font-bold text-gray-800 mb-2\">{formatNumber(waterPreserved)} L</div>\r\n            <div className=\"text-gray-600\">Water Preserved</div>\r\n            <div className=\"mt-4\">\r\n              {/* Water level visualization */}\r\n              <div className=\"w-full h-16 border-2 border-blue-300 rounded-lg relative overflow-hidden\">\r\n                <div \r\n                  className=\"absolute bottom-0 left-0 right-0 bg-blue-400 transition-all duration-1000 ease-in-out\"\r\n                  style={{ height: `${Math.min(100, (waterPreserved / 50000) * 100)}%` }}\r\n                ></div>\r\n                <div className=\"absolute inset-0 flex items-center justify-center text-white font-bold text-shadow\">\r\n                  {Math.round((waterPreserved / 50000) * 100)}%\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Landfill Space Saved */}\r\n          <div className={`bg-white p-6 rounded-lg shadow-md text-center transition-all duration-500 ${isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`} style={{ transitionDelay: '1200ms' }}>\r\n            <div className=\"text-5xl mb-3 text-amber-600\">üèûÔ∏è</div>\r\n            <div className=\"text-3xl font-bold text-gray-800 mb-2\">{formatNumber(stats.totalWaste * 0.15)} m¬≥</div>\r\n            <div className=\"text-gray-600\">Landfill Space Saved</div>\r\n            <div className=\"mt-4\">\r\n              {/* Progress bar showing equivalent to football fields */}\r\n              <div className=\"text-sm text-gray-500 mb-1\">\r\n                Equivalent to {((stats.totalWaste * 0.15) / 100).toFixed(2)} swimming pools\r\n              </div>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                <div \r\n                  className=\"bg-amber-600 h-2.5 rounded-full transition-all duration-700 ease-in-out\" \r\n                  style={{ width: `${Math.min(100, ((stats.totalWaste * 0.15) / 2000) * 100)}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}